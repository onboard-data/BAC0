# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build & Test

on:
  push:
    branches:
      - master
      - develop
      - threaded-task-manager
      - types-via-monkeytype
  pull_request:
    branches:
      - master
      - develop

jobs:
  build:
    runs-on: [ubuntu-22.04]
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install coveralls
        pip install colorama
        pip install pytest
        pip install pytest-cov
        pip install pandas
        pip install bokeh
        pip install flask
        pip install flask_bootstrap
        pip install colorama
        pip install netifaces
        pip install python-dotenv
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-mypy.txt ]; then pip install -r requirements-mypy.txt; fi
        pip install .
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Type check with mypy
      run: mypy -p BAC0
    - name: Test with pytest
      run: |
        coverage run --source BAC0 -m pytest -v
        coverage report
    - name: Upload coverage data to coveralls.io
      if: matrix.python-version == '3.9'
      run: coveralls
      env:
        GITHUB_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
        COVERALLS_FLAG_NAME: ${{ matrix.test-name }}


#  coveralls:
#    name: Indicate completion to coveralls.io
#    needs: build
#    runs-on: ubuntu-latest
#    container: python:3-slim
#    steps:
#    - name: Finished
#      run: |
#        pip3 install --upgrade coveralls
#        coveralls --finish
#      env:
#        GITHUB_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
#        COVERALLS_FLAG_NAME: ${{ matrix.test-name }}
#        COVERALLS_PARALLEL: true
